"use strict";
/*
 * –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –≤–∏—Ä–∞–∑ —Ç–∞ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó.
 * –ü–∞—Ä–∞–º–µ—Ç—Ä–∏, –∞—Ä–≥—É–º–µ–Ω—Ç–∏, –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è.
 */



// hello('Bob', "Black", "red", "baseball");

// function hello (name,surname = "Anonim", ...args) {
//   const newName = name.toUpperCase();
//   console.log(`Say Hello Dear ${name}`);
//   console.log(`Say Hello Dear ${newName}`);
//   console.log(name);
//   console.log(surname);
//   console.log(arguments);
//   console.log(args);
//  const newArr = Array.from(arguments);
//  console.log(newArr);
// }
// hello('Bob');

// const hello = function (name) {
//   const newName = name.toUpperCase();
//   console.log(`Say Hello Dear ${name}`);
//   console.log(`Say Hello Dear ${newName}`);
// }

// hello('Bob');

// const str ='new string';
// const number = 15;
// for(){

// }
//while, do while, for, if
// if(number>10) {

//   const res = number;
//   // console.log(res);
//   // console.log(str)
// }
// console.log(number);
// console.log(res);

// {

// }

// function multiply(x, y, z) {
//   console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è —Ä–∞–≤–µ–Ω ${x * y * z}`);
// }

// console.log("–õ–æ–≥ –¥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ multiply");
// multiply(2, 3, 5); // –†–µ–∑—É–ª—å—Ç–∞—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è —Ä–∞–≤–µ–Ω 30
// console.log("–õ–æ–≥ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ multiply");

// function –Ω–∞–∑–≤–∞_—Ñ—É–Ω–∫—Ü—ñ—ó(–ø–∞—Ä–∞–º–µ—Ç—Ä_1, –ø–∞—Ä–∞–º–µ—Ç—Ä_2...) {
// —Ç—ñ–ª–æ —Ñ—É–Ω–∫—Ü—ñ—ó
// }

// function showMessage(userFirstName, userLastName = '') {
//   const message = `Hello ${userFirstName} ${userLastName}`;

//   console.log(message);
// }

// showMessage('Craig');

// showMessage('Craig', 'Morris');

// const showMessage = function (userFirstName, userLastName = '') {
//   const message = `Hello ${userFirstName} ${userLastName}`;

//   console.log(message);
// };

// showMessage('Oleksii');

// showMessage('Craig', 'Morris');

// function fn(number) {
//   if (number > 10) {
//     return '–ß–∏—Å–ª–æ –±—ñ–ª—å—à–µ 10';
//   }

//   return '–ß–∏—Å–ª–æ –º–µ–Ω—à–µ 10';
// }

// const result = fn(0);

// console.log(result);

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calcBMI(weight, height) —è–∫–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –ª—é–¥–∏–Ω–∏.
? –î–ª—è —Ü—å–æ–≥–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ –≤–∞–≥—É –≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç –≤–∏—Å–æ—Ç–∏ –ª—é–¥–∏–Ω–∏ –≤ –º–µ—Ç—Ä–∞—Ö.
? –í–∞–≥–∞ —ñ –≤–∏—Å–æ—Ç–∞ –±—É–¥—É—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ñ —è–∫ —Ä—è–¥–∫–∏. –ù–µ—Ü—ñ–ª—ñ —á–∏—Å–ª–∞ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–∞–¥–∞–Ω—ñ —É –≤–∏–≥–ª—è–¥—ñ 24.7 –∞–±–æ 24,7,
? —Ç–æ–±—Ç–æ —è–∫ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –¥—Ä–æ–±–æ–≤–æ—ó —á–∞—Å—Ç–∏–Ω–∏ –º–æ–∂–µ –±—É—Ç–∏ –∫–æ–º–∞.
? –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –æ–∫—Ä—É–≥–ª–∏—Ç–∏ –¥–æ –æ–¥–Ω—ñ—î—ó —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏;
*/

// function calcBMI (weight,height) {
//   weight = Number.parseFloat(weight.replace(',', '.'));//88.3
//   height= Number.parseFloat(height.replace(',', '.'));//1.75
//   const resultBMI =weight/Math.pow(height,2);
//   // console.log(resultBMI);
//   return Number(resultBMI.toFixed(1));
// }

// const calcBMI = function (weight,height) {
//   weight = Number.parseFloat(weight.replace(',', '.'));//88.3
//   height= Number.parseFloat(height.replace(',', '.'));//1.75
//   const resultBMI =weight/Math.pow(height,2);
//   // console.log(resultBMI);
//   return Number(resultBMI.toFixed(1));
// }

// const userBMI = calcBMI('88,3', '1.75');
// console.log(userBMI);
/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é min(a, b), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –º–µ–Ω—à–µ –∑ —á–∏—Å–µ–ª a —ñ b.
*/

// const result = function (a, b) {
//   return a < b ? a : b;
//   // if(a<b){
//   //   return a;
//   // }
//   //   return b;

// }
// console.log(result(2,4));
// console.log(result(3, -1));
// console.log(result(1,1));

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getRectArea(dimensions) –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
? –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –±—É–¥–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ dimensions —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
? –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
*/

// const getRectArea= function (dimensions) {
//   const sidesArr = dimensions.split(' ');
//   console.log(sidesArr);
//   return Number(sidesArr[0])*Number(sidesArr[1]);

// }

// console.log(getRectArea('8 11'));
// console.log(getRectArea('18 11'));
// console.log(getRectArea('8 21'));

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for,
? —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –¥–æ –∫–æ–Ω—Å–æ–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
? —É —Ñ–æ—Ä–º–∞—Ç—ñ < –Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞ > - < –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ >. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
? –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango','Poly','Ajax'] –∑ —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango,
? –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
*/

// const logItems = function(items){
//   const res= [];
//   for (let i=0; i < items.length; i +=1) {
//     res.push(`${i+1}: ${items[i]}`) ;
//     // console.log(`${i+1}: ${items[i]}`)
//   }
//   const str = res.join(' ');
//   console.log(str);
//   return str;
// }

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é printContactsInfo(names, phones), —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —ñ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
? –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ names —ñ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∞–º–∏, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.
? –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —ñ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å.
? –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —ñ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
*/

// const printContactsInfo = function (names, phones) {
//   names = names.split(",");
//   phones = phones.split(",");
//   for (let i = 0; i < names.length; i += 1) {
//     console.log(`${names[i]}: ${phones[i]}`);
//   }
//   return
// };

// printContactsInfo(
//   "Jacob,William,Solomon,Artemis",
//   "89001234567,89001112233,890055566377,890055566300"
// );

// printContactsInfo(
//   "Vera,Carr,Violet,Sherman",
//   "89001234567,89001112233,890055566377,890055566300"
// );

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é findLargestNumber(numbers) —è–∫–∞ —à—É–∫–∞—î –Ω–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ –≤ –º–∞—Å–∏–≤—ñ.
*/

// const findLargestNumber = function(numbers) {
// let max = numbers[0];
// for(let i=1; i < numbers.length; i +=1) {
//   if(numbers[i] > max) {
//     max = numbers [i]
//   }
// }
// return max;
// }


// console.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calcAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.
? –í—Å—ñ –∞—Ä—É–≥–º–µ–Ω—Ç–∏ –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —á–∏—Å–ª–∞–º–∏.
*/

// const calcAverage = function(){
//   // arguments - –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤
//   let total = 0;
//   for(const number of arguments){
//     total += number;
//   }
//   return total/arguments.length;
// }

// console.log(calcAverage(1, 2, 3, 4)); // 2.5
// console.log(calcAverage(14, 8, 2)); // 8
// console.log(calcAverage(27, 43, 2, 8, 36)); // 23.2

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ courses:
? addCourse(name) - –¥–æ–¥–∞—î –∫—É—Ä—Å –≤ –∫—ñ–Ω–µ—Ü—å –∫–æ–ª–µ–∫—Ü—ñ—ó
? removeCourse(name) - –≤–∏–¥–∞–ª—è—î –∫—É—Ä—Å –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
? updateCourse(oldName, newName) - –∑–º—ñ–Ω—é—î –Ω–∞–∑–≤—É –∫—É—Ä—Å–∞
*/

// const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

// const addCourse = function (name) {
//   // courses.push(name);
//   if(courses.includes(name)){
//     console.log('–£ –≤–∞—Å —Ç–∞–∫–∏–π —ñ–∂–µ –∫—É—Ä—Å –∑–∞–ø–∏—Å–∞–Ω–∏–π');
//     return;
//   }
//   courses.push(name);
// }

// const removeCourse = function(name) {
//   if(!courses.includes(name)) {
//     console.log('–ö—É—Ä—Å –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
//     return;
//   }
//   const idxOfCourse = courses.indexOf(name);
//   courses.splice(idxOfCourse,1);
// }

// const updateCourse = function(oldName, newName) {
//   console.log(arguments);
//   // console.log(arg);
//   // const new2 = arguments[2];
//   // console.log(new2);
//   if(!courses.includes(oldName)) {
//     console.log('–ö—É—Ä—Å –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
//     return;
//   }
//   const idxOfCourse = courses.indexOf(oldName);
//   courses.splice(idxOfCourse, 1, newName);
// }

// console.log(courses);
// addCourse('Express');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// addCourse('CSS'); // '–£ –≤–∞—Å –≤–∂–µ —î —Ç–∞–∫–∏–π –∫—É—Ä—Å'

// removeCourse('React');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// removeCourse('Vue'); // '–ö—É—Ä—Å –∑–∞ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

// updateCourse('Express', 'NestJS', 'node');
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']
// updateCourse('–°++', 'PHP'); // '–ö—É—Ä—Å–∞ –∑–∞ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

//
// const fn1 = function () {
//   console.log('–¥—Ä—É–≥–∏–π –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ');

//   fn2();
//   console.log('—Å—å–æ–º–∏–π –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ');
// };

// const fn2 = function () {
//   console.log('—Ç—Ä–µ—Ç—ñ–π –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ');

//   fn3();
//   console.log('—à–æ—Å—Ç–∏–π –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ');
// };

// const fn3 = function () {
//   console.log('—á–µ—Ç–≤–µ—Ä—Ç–∏–π –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ');
//   console.log('–ø º—è—Ç–∏–π –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ');
// };
// console.log('–Ø –±—É–¥—É –ø–µ—Ä—à–∏–º –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ')
// fn1();
// console.log('–≤–æ—Å—å–º–∏–π –ø—Ä–∏ –≤–∏–≤–æ–¥—ñ');

// const fnSurname = function(surname){
//   console.log(surname)
// };
// const fnQuestion = function(){
//   const str = prompt('What do you want?');
//   console.log(str);
//   return str;
// }

// const fnStr = function (name) {
//   console.log("hello");
//   fnQuestion();
//   console.log(`name`);
//   fnSurname("Jonson");
// }
// console.log("good");
// fnStr('Bob');
// console.log('bye');



// add(2,3);
// function add (a,b) { // function declaration
//   console.log(a+b);
//   return a + b;
// }



// const add = function(a,b) { //function expression
//   console.log(a+b);
//   return a + b;
// }

// add(2,3);

// const add = (a,b) => {
//   console.log(a+b);
//   return a + b;
// }

// let a;
// function sum (){
//   let new;
// a;
// }

// if(a<0) {
//   console.log(a);
//   let total = 0; 
//   for(let i=1; ;){
// a
// total
// i
//   }
//   i ?
// }

// total ?


const res = function (a,b) {
  return a+b;
}

function res2 (a,b) {
  return a +b;
}

if(true){
  
  res2(2,2);
}